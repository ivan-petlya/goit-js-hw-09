{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAZMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAetB,SAAkBC,GAChBA,EAAMC,iBAON,IANA,IAAIC,EAAYC,OAAON,SAASC,cAAc,qBAAqBM,OAC/DC,EAAYF,OAAON,SAASC,cAAc,oBAAoBM,OAC9DE,EAAmBH,OACrBN,SAASC,cAAc,sBAAsBM,OAGtCG,EAAI,EAAGA,GAAKD,EAAkBC,GAAK,EAC1CpB,EAAcoB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAzB,GAAS0B,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAGjDa,GAAaG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSabmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSabmit(event) {\n  event.preventDefault();\n  let mainDelay = Number(document.querySelector('input[name=delay]').value);\n  let delayStep = Number(document.querySelector('input[name=step]').value);\n  let amountOfPromises = Number(\n    document.querySelector('input[name=amount]').value\n  );\n\n  for (let i = 1; i <= amountOfPromises; i += 1) {\n    createPromise(i, mainDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    mainDelay += delayStep;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","mainDelay","Number","value","delayStep","amountOfPromises","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2f376dd3.js.map"}